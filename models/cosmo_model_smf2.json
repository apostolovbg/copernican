{
  "model_name": "StationaryMetronomicFieldCosmologyV2",
  "version": "2.0",
  "description": "Stationary Metronomic Field Cosmology V2 (SMF2) is a fully static-universe model in which all observed redshifts and distance indicators arise from photon interactions with a primordial metronomic field—there is no Big Bang expansion, no dark energy, and no dark matter.  In SMF2, the effective ‘Hubble rate’ is generated by two independent oscillatory modes in this cosmic field.  A small additional term mimics residual clustering effects, and the BAO sound horizon varies empirically with redshift.  With a handful of physically transparent parameters (two amplitudes, two decay rates, two frequencies, two phases, an effective matter term, and a redshift-dependent sound-horizon scaling), SMF2 simultaneously reproduces Type Ia supernova luminosity distances and baryon acoustic oscillation scales in a timeless cosmos.",
  "abstract": "SMF2 replaces cosmic expansion with a stationary metronomic field pervading all space.  Photons lose energy (redshift) by interacting with two coupled field modes φ₁(z) and φ₂(z), each characterized by its own amplitude, decay rate, frequency, and phase.  An effective clustering term M_eff*(1+z)^3 captures galaxy-scale inhomogeneities.  The BAO standard ruler r_s(z) is allowed to evolve as r_s0*(1 + B*z*exp(-γ z)), giving precise control over the measured BAO distances.  This eight-parameter framework fits both supernova and BAO data with the same underlying mechanism—no expansion, no new forms of matter or energy.",
  "Hz_expression": "H0 * sqrt( M_eff*(1+z)**3 + 1 + A1*exp(-alpha1*z)*cos(omega1*z + phi01) + A2*exp(-alpha2*z)*cos(omega2*z + phi02) )",
  "parameters": [
    {
      "name": "Hubble-scale rate",
      "python_var": "H0",
      "bounds": [50.0, 80.0],
      "unit": "km/s/Mpc",
      "latex_name": "$H_0$"
    },
    {
      "name": "Mode 1 amplitude",
      "python_var": "A1",
      "bounds": [0.0, 0.5],
      "unit": "",
      "latex_name": "$A_1$"
    },
    {
      "name": "Mode 1 decay rate",
      "python_var": "alpha1",
      "bounds": [0.1, 10.0],
      "unit": "",
      "latex_name": "$\\alpha_1$"
    },
    {
      "name": "Mode 1 frequency",
      "python_var": "omega1",
      "bounds": [0.0, 20.0],
      "unit": "",
      "latex_name": "$\\omega_1$"
    },
    {
      "name": "Mode 1 phase",
      "python_var": "phi01",
      "bounds": [0.0, 6.283],
      "unit": "rad",
      "latex_name": "$\\varphi_{0,1}$"
    },
    {
      "name": "Mode 2 amplitude",
      "python_var": "A2",
      "bounds": [0.0, 0.5],
      "unit": "",
      "latex_name": "$A_2$"
    },
    {
      "name": "Mode 2 decay rate",
      "python_var": "alpha2",
      "bounds": [0.1, 10.0],
      "unit": "",
      "latex_name": "$\\alpha_2$"
    },
    {
      "name": "Mode 2 frequency",
      "python_var": "omega2",
      "bounds": [0.0, 50.0],
      "unit": "",
      "latex_name": "$\\omega_2$"
    },
    {
      "name": "Mode 2 phase",
      "python_var": "phi02",
      "bounds": [0.0, 6.283],
      "unit": "rad",
      "latex_name": "$\\varphi_{0,2}$"
    },
    {
      "name": "Effective clustering term",
      "python_var": "M_eff",
      "bounds": [0.0, 0.05],
      "unit": "",
      "latex_name": "$M_{\\rm eff}$"
    },
    {
      "name": "Base sound horizon",
      "python_var": "rs0",
      "bounds": [140.0, 160.0],
      "unit": "Mpc",
      "latex_name": "$r_{s,0}$"
    },
    {
      "name": "BAO bump amplitude",
      "python_var": "B",
      "bounds": [-1.0, 1.0],
      "unit": "",
      "latex_name": "$B$"
    },
    {
      "name": "BAO bump decay rate",
      "python_var": "gamma",
      "bounds": [0.0, 5.0],
      "unit": "",
      "latex_name": "$\\gamma$"
    },
    {
      "name": "Speed of light",
      "python_var": "c",
      "bounds": [299792.458, 299792.458],
      "unit": "km/s",
      "latex_name": "$c$"
    },
    {
      "name": "Drag-epoch redshift",
      "python_var": "z_recomb",
      "bounds": [800, 1500],
      "unit": "",
      "latex_name": "$z_{\\rm drag}$"
    }
  ],
  "equations": {
    "sne": [
      "$$d_L(z) = (1+z) \\int_0^z \\frac{c\\,dz'}{H(z')}$$",
      "$$\\mu(z) = 5\\log_{10}\\bigl[d_L(z)/{\\rm Mpc}\\bigr] + 25$$"
    ],
    "bao": [
      "$$D_M(z) = \\int_0^z \\frac{c\\,dz'}{H(z')}$$",
      "$$D_H(z) = \\frac{c}{H(z)}$$",
      "$$D_V(z) = \\bigl[D_M(z)^2 D_H(z)\\bigr]^{1/3}$$"
    ]
  },
  "rs_expression": "rs0*(1 + B*z*exp(-gamma*z))",
  "predicts_bao": true
}
